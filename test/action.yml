name: "Run unit tests"
description: "Runs all unit tests which matches the specified pattern."
inputs:
  python-version:
    description: "The python version to use for executing the quality tasks."
    required: false
    default: "3.9"
  python-package-path:
    description: "Path of the python package under quality test."
    required: true
  unit-test-file-pattern:
    description: "The pattern to search for unit test files."
    required: false
    default: "'test*.py'"
  use-tox:
    description: "Use tox to run quality tasks"
    required: false
    default: "false"
  upload-to-sonarcloud:
    description: "Wheter the coverage calculation shall be uploaded to sonarcloud or not"
    required: false
    default: "true"
  pip-index-url:
    description: "The pip index url."
    required: true
  pip-extra-index-url:
    description: "The pip extra index url."
    required: true
  sonar-token:
    description: "The token to use for sonarcloud."
    required: false

runs:
  using: composite
  steps:
    - name: "Setup Python"
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}

    - name: Running flake8 linter...
      env:
        PIP_INDEX_URL: ${{ inputs.pip-index-url }}
        PIP_EXTRA_INDEX_URL: ${{ inputs.pip-extra-index-url }}
      shell: bash
      run: |
        pip install flake8

        # stop the build if there are Python syntax errors or undefined names
        flake8 ./${{ inputs.python-package-path }} --count --select=E9,F63,F7,F82 --builtins="_" --show-source --statistics

        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 ./${{ inputs.python-package-path }} --count --exit-zero --max-complexity=10 --builtins="_" --max-line-length=127 --statistics

    - name: Running unit test and coverage calculation...
      shell: bash
      if: ${{ inputs.use-tox == 'false' }}
      env:
        PIP_INDEX_URL: ${{ inputs.pip-index-url }}
        PIP_EXTRA_INDEX_URL: ${{ inputs.pip-extra-index-url }}
        PYTHON_PACKAGE_PATH: ${{ inputs.python-package-path }}
        UNIT_TEST_FILE_PATTERN: ${{ inputs.unit-test-file-pattern }}
        COVERAGE_REPORT_OUTPUT: "./coverage-reports/coverage.xml"
      run: |
        pip install coverage
        pip install .[test-dependencies]
        coverage run --source=${{ env.PYTHON_PACKAGE_PATH }} -m unittest discover -s tests -p ${{ env.UNIT_TEST_FILE_PATTERN }}
        coverage xml -o ${{ env.COVERAGE_REPORT_OUTPUT }}

    - name: Running unit test and coverage calculation using tox...
      shell: bash
      if: ${{ inputs.use-tox == 'true' }}
      env:
        PIP_INDEX_URL: ${{ inputs.pip-index-url }}
        PIP_EXTRA_INDEX_URL: ${{ inputs.pip-extra-index-url }}
        PYTHON_PACKAGE_PATH: ${{ inputs.python-package-path }}
        UNIT_TEST_FILE_PATTERN: ${{ inputs.unit-test-file-pattern }}
        COVERAGE_REPORT_OUTPUT: "./coverage-reports/coverage.xml"
      run: |
        pip install coverage
        pip install tox
        tox
        coverage xml -o ${{ env.COVERAGE_REPORT_OUTPUT }}

    - name: SonarCloud Scan
      if: ${{ inputs.upload-to-sonarcloud == 'true' }}
      uses: sonarsource/sonarcloud-github-action@v2.0.0
      env:
        GITHUB_TOKEN: ${{ inputs.ci-token || github.token }}
        SONAR_TOKEN: ${{ inputs.sonar-token }}
